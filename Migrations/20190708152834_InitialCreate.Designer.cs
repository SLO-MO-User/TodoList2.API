// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoList2.API.Data;

namespace TodoList2.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190708152834_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("TodoList2.API.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAtDateTime");

                    b.Property<bool>("IsComplete");

                    b.Property<bool>("IsImportant");

                    b.Property<bool>("IsInTodayView");

                    b.Property<DateTime>("LastUpdatedAtDateTime");

                    b.Property<string>("ListName");

                    b.Property<string>("Note");

                    b.Property<DateTime>("RemindMeDateTime");

                    b.Property<DateTime>("TaskLastDateTime");

                    b.Property<string>("TaskName");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Todos");
                });

            modelBuilder.Entity("TodoList2.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAtDateTime");

                    b.Property<DateTime>("LastActiveAtDateTime");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TodoList2.API.Models.Todo", b =>
                {
                    b.HasOne("TodoList2.API.Models.User", "User")
                        .WithMany("Todos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
